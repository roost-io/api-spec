# ********RoostGPT********

# Test generated by RoostGPT for test k-api-dbrx-may23 using AI Type DBRX and AI Model meta-llama-3-70b-instruct-041824
# 
# Feature file generated for /nobelPrizes_get for http method type GET 
# RoostTestHash=977dd819cb
# 
# 

# ********RoostGPT********
Feature: Nobel Prize API
  As a user
  I want to obtain information about all Nobel Prizes or search for a specific set of Nobel Prizes

  Scenario Outline: Get Nobel Prize by year
    Given def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    Given url urlBase + '/2.1/nobelPrizes'
    Given param nobelPrizeYear = <year>
    Given header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    When method get
    Then status 200
    Then match response.nobelPrizes[0].awardYear == <year>
    Then match response.nobelPrizes[0].categoryFullName.en == 'English'
    Then match response.nobelPrizes[0].dateAwarded == '2015-11-12'
    Then match response.nobelPrizes[0].prizeAmount == 1000000
    Then match response.nobelPrizes[0].prizeAmountAdjusted == 1000000
    Then match response.nobelPrizes[0].topMotivation.en == 'English'
    Then match response.nobelPrizes[0].laureates[0].name.en == 'English'
    Then match response.nobelPrizes[0].laureates[0].portion == '1'
    Then match response.nobelPrizes[0].laureates[0].sortOrder == '1'
    Then match response.nobelPrizes[0].laureates[0].motivation.en == 'English'
    Then match response.nobelPrizes[0].laureates[0].links[0].rel == 'self'
    Then match response.nobelPrizes[0].laureates[0].links[0].href == '#'

    Examples:
      | read('nobelPrizes_get.csv') |

  Scenario Outline: Get Nobel Prize by year range
    Given def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    Given url urlBase + '/2.1/nobelPrizes'
    Given param nobelPrizeYear = <year>
    Given param yearTo = <yearTo>
    Given header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    When method get
    Then status 200
    Then match response.nobelPrizes[0].awardYear == <year>
    Then match response.nobelPrizes[0].categoryFullName.en == 'English'
    Then match response.nobelPrizes[0].dateAwarded == '2015-11-12'
    Then match response.nobelPrizes[0].prizeAmount == 1000000
    Then match response.nobelPrizes[0].prizeAmountAdjusted == 1000000
    Then match response.nobelPrizes[0].topMotivation.en == 'English'
    Then match response.nobelPrizes[0].laureates[0].name.en == 'English'
    Then match response.nobelPrizes[0].laureates[0].portion == '1'
    Then match response.nobelPrizes[0].laureates[0].sortOrder == '1'
    Then match response.nobelPrizes[0].laureates[0].motivation.en == 'English'
    Then match response.nobelPrizes[0].laureates[0].links[0].rel == 'self'
    Then match response.nobelPrizes[0].laureates[0].links[0].href == '#'

    Examples:
      | read('nobelPrizes_get.csv') |

  Scenario Outline: Get Nobel Prize by category
    Given def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    Given url urlBase + '/2.1/nobelPrizes'
    Given param nobelPrizeCategory = <category>
    Given header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    When method get
    Then status 200
    Then match response.nobelPrizes[0].categoryFullName.en == <category>

    Examples:
      | read('nobelPrizes_get.csv') |

  Scenario: Get Nobel Prize with invalid parameters
    Given def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    Given url urlBase + '/2.1/nobelPrizes'
    Given param nobelPrizeYear = 'invalid'
    Given header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    When method get
    Then status 400
    Then match response.code == '404'
    Then match response.message == 'There is not Laureate born that date'

  Scenario: Get Nobel Prize with no parameters
    Given def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    Given url urlBase + '/2.1/nobelPrizes'
    Given header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    When method get
    Then status 200
    Then match response.nobelPrizes[0].awardYear == 1989
    Then match response.nobelPrizes[0].categoryFullName.en == 'English'
    Then match response.nobelPrizes[0].dateAwarded == '2015-11-12'
    Then match response.nobelPrizes[0].prizeAmount == 1000000
    Then match response.nobelPrizes[0].prizeAmountAdjusted == 1000000
    Then match response.nobelPrizes[0].topMotivation.en == 'English'
    Then match response.nobelPrizes[0].laureates[0].name.en == 'English'
    Then match response.nobelPrizes[0].laureates[0].portion == '1'
    Then match response.nobelPrizes[0].laureates[0].sortOrder == '1'
    Then match response.nobelPrizes[0].laureates[0].motivation.en == 'English'
    Then match response.nobelPrizes[0].laureates[0].links[0].rel == 'self'
    Then match response.nobelPrizes[0].laureates[0].links[0].href == '#'
