# ********RoostGPT********

# Test generated by RoostGPT for test k-api-dbrx-may23 using AI Type DBRX and AI Model meta-llama-3-70b-instruct-041824
# 
# Test generated by RoostGPT for test k-api-dbrx-may23 using AI Type DBRX and AI Model meta-llama-3-70b-instruct-041824
# 
# Feature file generated for /laureates_get for http method type GET 
# RoostTestHash=41cb7e02aa
# 
# 

# ********RoostGPT********
Feature: Retrieve laureates
  As a user
  I want to retrieve laureates
  So that I can get the list of laureates

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase

  Scenario Outline: Retrieve laureates with valid parameters
    Given path '2.1/laureates'
    And param offset = <offset>
    And param limit = <limit>
    And param sort = <sort>
    And param ID = <ID>
    And param name = <name>
    And param gender = <gender>
    And param motivation = <motivation>
    And param affiliation = <affiliation>
    And param residence = <residence>
    And param birthDate = <birthDate>
    And param birthDateTo = <birthDateTo>
    And param deathDate = <deathDate>
    And param deathDateTo = <deathDateTo>
    And param foundedDate = <foundedDate>
    And param birthCity = <birthCity>
    And param birthCountry = <birthCountry>
    And param birthContinent = <birthContinent>
    And param deathCity = <deathCity>
    And param deathCountry = <deathCountry>
    And param deathContinent = <deathContinent>
    And param foundedCity = <foundedCity>
    And param foundedCountry = <foundedCountry>
    And param foundedContinent = <foundedContinent>
    And param HeadquartersCity = <HeadquartersCity>
    And param HeadquartersCountry = <HeadquartersCountry>
    And param HeadquartersContinent = <HeadquartersContinent>
    And param nobelPrizeYear = <nobelPrizeYear>
    And param yearTo = <yearTo>
    And param nobelPrizeCategory = <nobelPrizeCategory>
    And param format = <format>
    And param csvLang = <csvLang>
    When method GET
    Then status 200
    And match response ==
      """
      {
        "laureates": "#array",
        "meta": "#object",
        "links": "#array"
      }
      """

    Examples:
      | read('laureates_get.csv') |

  Scenario: Retrieve laureates with invalid parameters
    Given path '2.1/laureates'
    And param offset = 'abc'
    And param limit = 'def'
    When method GET
    Then status 400
    And match response ==
      """
      {
        "code": "#string",
        "message": "#string"
      }
      """

  Scenario: Retrieve laureates with missing parameters
    Given path '2.1/laureates'
    When method GET
    Then status 422
    And match response ==
      """
      {
        "code": "#string",
        "message": "#string"
      }
      """
